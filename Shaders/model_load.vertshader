
#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;

out vec3 normal;
out vec3 light;
out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform vec3 in_light;

void main()
{
    mat3 normalMatrix = transpose(inverse(mat3(model)));
    normal = normalize(normalMatrix * aNormal);

    TexCoords = aTexCoords;
    gl_Position = projection * view * model * vec4(aPos, 1.0);
    light = in_light - vec3(model * vec4(aPos, 1)); // makes light vec follow view
}
